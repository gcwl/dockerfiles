# https://github.com/pytorch/pytorch/blob/master/docker/pytorch/Dockerfile
# https://hub.docker.com/r/pytorch/pytorch/tags
# https://hub.docker.com/r/nvidia/cuda/
ARG BASE_IMAGE=pytorch/pytorch:1.1.0-cuda10.0-cudnn7.5-devel
FROM $BASE_IMAGE

# Install nvidia/apex | https://github.com/NVIDIA/apex/tree/master/examples/docker
# ================================================================================
# Base image must at least have pytorch and CUDA installed.
RUN echo "Installing Apex on top of ${BASE_IMAGE}"
# make sure we don't overwrite some existing directory called "apex"
WORKDIR /tmp/unique_for_apex
# uninstall Apex if present, twice to make absolutely sure :)
RUN pip uninstall -y apex || :
RUN pip uninstall -y apex || :
# SHA is something the user can touch to force recreation of this Docker layer,
# and therefore force cloning of the latest version of Apex
RUN SHA=ToUcHMe git clone https://github.com/NVIDIA/apex.git
WORKDIR /tmp/unique_for_apex/apex
RUN pip install -v --no-cache-dir --global-option="--cpp_ext" --global-option="--cuda_ext" .

# clean up
# ========
RUN rm -rf /tmp/*

# set default directory
# =====================
WORKDIR /workspace
